version: '3.8'

services:
  service_a:
    build: ./service_a
    container_name: service_a_distrib_scaled
    ports:
      - "5001:5000" # Mapuje port 5000 kontejneru na port 5001 hostitele
    environment:
      # URL adresa pro volání služby B nyní ukazuje na Nginx load balancer,
      # který běží na portu 80 uvnitř Docker sítě.
      - SERVICE_B_URL=http://nginx_lb # Nginx bude naslouchat na portu 80 defaultně
    depends_on:
      - nginx_lb # service_a závisí na spuštění nginx_lb
    networks:
      - app_network

  service_b:
    build: ./service_b
    # ports:
    #   - "5002:5000"
    networks:
      - app_network
    # Pro demonstraci škálování můžeme nastavit deploy direktivu,
    # ale reálné škálování se provede příkazem `docker-compose up --scale service_b=X`
    # deploy:
    #   replicas: 1 # Výchozí počet replik

  nginx_lb:
    image: nginx:1.25-alpine
    container_name: nginx_load_balancer
    ports:
      - "5050:80" # Mapujeme port 80 Nginx na port 5050 hostitele
    volumes:
      # Mapujeme vlastní konfigurační soubor Nginx do kontejneru
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - service_b # Nginx potřebuje, aby běžela alespoň jedna instance service_b
    networks:
      - app_network

networks:
  app_network:
    # Definice vlastní sítě pro komunikaci mezi službami
    driver: bridge
