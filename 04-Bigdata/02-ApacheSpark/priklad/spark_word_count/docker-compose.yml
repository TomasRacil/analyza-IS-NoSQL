version: '3.8'

services:
  spark-master:
    image: apache/spark:3.5.6-scala2.12-java17-python3-r-ubuntu
    container_name: spark-master
    hostname: spark-master
    user: root
    ports:
      - "8080:8080" # Spark Master Web UI
      - "4040:4040" # Spark Application UI (pro běžící aplikaci)
      - "7077:7077" # Port pro komunikaci s workery
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./app/data:/opt/spark-data
    command: [ "/opt/spark/bin/spark-class", "org.apache.spark.deploy.master.Master" ]

  spark-worker-1:
    image: apache/spark:3.5.6-scala2.12-java17-python3-r-ubuntu
    container_name: spark-worker-1
    hostname: spark-worker-1
    user: root
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - PYSPARK_PYTHON=python3
    volumes:
      - ./app/data:/opt/spark-data
    command: [ "/opt/spark/bin/spark-class", "org.apache.spark.deploy.worker.Worker", "spark://spark-master:7077" ]

  spark-worker-2:
    image: apache/spark:3.5.6-scala2.12-java17-python3-r-ubuntu
    container_name: spark-worker-2
    hostname: spark-worker-2
    user: root
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - PYSPARK_PYTHON=python3
    volumes:
      - ./app/data:/opt/spark-data
    command: [ "/opt/spark/bin/spark-class", "org.apache.spark.deploy.worker.Worker", "spark://spark-master:7077" ]

  spark-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark-app-wordcount
    depends_on:
      spark-master:
        condition: service_started
      spark-worker-1:
        condition: service_started
      spark-worker-2:
        condition: service_started
    command: [ "/bin/sh", "-c", "sleep 15 && spark-submit --master spark://spark-master:7077 /app/word_count.py && echo 'SPARK SCRIPT FINISHED - APP CONTAINER WILL SLEEP NOW' && sleep 300" ]
    volumes:
      - ./app/data:/opt/spark-data
